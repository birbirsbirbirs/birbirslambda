import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer

buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.1.6"
		classpath "com.github.johnrengelman:shadow:8.1.1"
	}
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: "io.spring.dependency-management"
apply plugin: "com.github.johnrengelman.shadow"

group = 'co.ptm'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	api 'org.springframework.boot:spring-boot-starter'
	api 'org.springframework.cloud:spring-cloud-function-context'
	api 'org.springframework.cloud:spring-cloud-function-adapter-aws:4.1.3'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

assemble.dependsOn = [shadowJar]

shadowJar {
	archiveClassifier.set('layers')
	mergeServiceFiles()
	append 'META-INF/spring.handlers'
	append 'META-INF/spring.schemas'
	append 'META-INF/spring.tooling'
	append 'META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports'
	append 'META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports'
	transform(PropertiesFileTransformer) {
		paths = ['META-INF/spring.factories']
		mergeStrategy = "append"
	}
}